#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="fypDB")]
	public partial class DbModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAspTextAnalisysSegment(AspTextAnalisysSegment instance);
    partial void UpdateAspTextAnalisysSegment(AspTextAnalisysSegment instance);
    partial void DeleteAspTextAnalisysSegment(AspTextAnalisysSegment instance);
    partial void InsertAspVideoAnalysisSegment(AspVideoAnalysisSegment instance);
    partial void UpdateAspVideoAnalysisSegment(AspVideoAnalysisSegment instance);
    partial void DeleteAspVideoAnalysisSegment(AspVideoAnalysisSegment instance);
    partial void InsertAspVideoGroup(AspVideoGroup instance);
    partial void UpdateAspVideoGroup(AspVideoGroup instance);
    partial void DeleteAspVideoGroup(AspVideoGroup instance);
    partial void InsertAspVideoDetail(AspVideoDetail instance);
    partial void UpdateAspVideoDetail(AspVideoDetail instance);
    partial void DeleteAspVideoDetail(AspVideoDetail instance);
    partial void InsertAspSoundAnalisysSegment(AspSoundAnalisysSegment instance);
    partial void UpdateAspSoundAnalisysSegment(AspSoundAnalisysSegment instance);
    partial void DeleteAspSoundAnalisysSegment(AspSoundAnalisysSegment instance);
    #endregion
		
		public DbModelDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["fypDBConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DbModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DbModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AspTextAnalisysSegment> AspTextAnalisysSegments
		{
			get
			{
				return this.GetTable<AspTextAnalisysSegment>();
			}
		}
		
		public System.Data.Linq.Table<AspVideoAnalysisSegment> AspVideoAnalysisSegments
		{
			get
			{
				return this.GetTable<AspVideoAnalysisSegment>();
			}
		}
		
		public System.Data.Linq.Table<AspVideoGroup> AspVideoGroups
		{
			get
			{
				return this.GetTable<AspVideoGroup>();
			}
		}
		
		public System.Data.Linq.Table<AspVideoDetail> AspVideoDetails
		{
			get
			{
				return this.GetTable<AspVideoDetail>();
			}
		}
		
		public System.Data.Linq.Table<AspSoundAnalisysSegment> AspSoundAnalisysSegments
		{
			get
			{
				return this.GetTable<AspSoundAnalisysSegment>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspTextAnalisysSegments")]
	public partial class AspTextAnalisysSegment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TextSegmentId;
		
		private string _VideoId;
		
		private System.Nullable<int> _TextSegmentIndex;
		
		private string _TextFromSpeech;
		
		private System.Nullable<double> _Anger;
		
		private System.Nullable<double> _Disgust;
		
		private System.Nullable<double> _Fear;
		
		private System.Nullable<double> _Joy;
		
		private System.Nullable<double> _Sadness;
		
		private EntityRef<AspVideoDetail> _AspVideoDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTextSegmentIdChanging(int value);
    partial void OnTextSegmentIdChanged();
    partial void OnVideoIdChanging(string value);
    partial void OnVideoIdChanged();
    partial void OnTextSegmentIndexChanging(System.Nullable<int> value);
    partial void OnTextSegmentIndexChanged();
    partial void OnTextFromSpeechChanging(string value);
    partial void OnTextFromSpeechChanged();
    partial void OnAngerChanging(System.Nullable<double> value);
    partial void OnAngerChanged();
    partial void OnDisgustChanging(System.Nullable<double> value);
    partial void OnDisgustChanged();
    partial void OnFearChanging(System.Nullable<double> value);
    partial void OnFearChanged();
    partial void OnJoyChanging(System.Nullable<double> value);
    partial void OnJoyChanged();
    partial void OnSadnessChanging(System.Nullable<double> value);
    partial void OnSadnessChanged();
    #endregion
		
		public AspTextAnalisysSegment()
		{
			this._AspVideoDetail = default(EntityRef<AspVideoDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextSegmentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TextSegmentId
		{
			get
			{
				return this._TextSegmentId;
			}
			set
			{
				if ((this._TextSegmentId != value))
				{
					this.OnTextSegmentIdChanging(value);
					this.SendPropertyChanging();
					this._TextSegmentId = value;
					this.SendPropertyChanged("TextSegmentId");
					this.OnTextSegmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoId", DbType="VarChar(255)")]
		public string VideoId
		{
			get
			{
				return this._VideoId;
			}
			set
			{
				if ((this._VideoId != value))
				{
					if (this._AspVideoDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVideoIdChanging(value);
					this.SendPropertyChanging();
					this._VideoId = value;
					this.SendPropertyChanged("VideoId");
					this.OnVideoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextSegmentIndex", DbType="Int")]
		public System.Nullable<int> TextSegmentIndex
		{
			get
			{
				return this._TextSegmentIndex;
			}
			set
			{
				if ((this._TextSegmentIndex != value))
				{
					this.OnTextSegmentIndexChanging(value);
					this.SendPropertyChanging();
					this._TextSegmentIndex = value;
					this.SendPropertyChanged("TextSegmentIndex");
					this.OnTextSegmentIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TextFromSpeech", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string TextFromSpeech
		{
			get
			{
				return this._TextFromSpeech;
			}
			set
			{
				if ((this._TextFromSpeech != value))
				{
					this.OnTextFromSpeechChanging(value);
					this.SendPropertyChanging();
					this._TextFromSpeech = value;
					this.SendPropertyChanged("TextFromSpeech");
					this.OnTextFromSpeechChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anger", DbType="Float")]
		public System.Nullable<double> Anger
		{
			get
			{
				return this._Anger;
			}
			set
			{
				if ((this._Anger != value))
				{
					this.OnAngerChanging(value);
					this.SendPropertyChanging();
					this._Anger = value;
					this.SendPropertyChanged("Anger");
					this.OnAngerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disgust", DbType="Float")]
		public System.Nullable<double> Disgust
		{
			get
			{
				return this._Disgust;
			}
			set
			{
				if ((this._Disgust != value))
				{
					this.OnDisgustChanging(value);
					this.SendPropertyChanging();
					this._Disgust = value;
					this.SendPropertyChanged("Disgust");
					this.OnDisgustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fear", DbType="Float")]
		public System.Nullable<double> Fear
		{
			get
			{
				return this._Fear;
			}
			set
			{
				if ((this._Fear != value))
				{
					this.OnFearChanging(value);
					this.SendPropertyChanging();
					this._Fear = value;
					this.SendPropertyChanged("Fear");
					this.OnFearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Joy", DbType="Float")]
		public System.Nullable<double> Joy
		{
			get
			{
				return this._Joy;
			}
			set
			{
				if ((this._Joy != value))
				{
					this.OnJoyChanging(value);
					this.SendPropertyChanging();
					this._Joy = value;
					this.SendPropertyChanged("Joy");
					this.OnJoyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sadness", DbType="Float")]
		public System.Nullable<double> Sadness
		{
			get
			{
				return this._Sadness;
			}
			set
			{
				if ((this._Sadness != value))
				{
					this.OnSadnessChanging(value);
					this.SendPropertyChanging();
					this._Sadness = value;
					this.SendPropertyChanged("Sadness");
					this.OnSadnessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspVideoDetail_AspTextAnalisysSegment", Storage="_AspVideoDetail", ThisKey="VideoId", OtherKey="VideoId", IsForeignKey=true)]
		public AspVideoDetail AspVideoDetail
		{
			get
			{
				return this._AspVideoDetail.Entity;
			}
			set
			{
				AspVideoDetail previousValue = this._AspVideoDetail.Entity;
				if (((previousValue != value) 
							|| (this._AspVideoDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspVideoDetail.Entity = null;
						previousValue.AspTextAnalisysSegments.Remove(this);
					}
					this._AspVideoDetail.Entity = value;
					if ((value != null))
					{
						value.AspTextAnalisysSegments.Add(this);
						this._VideoId = value.VideoId;
					}
					else
					{
						this._VideoId = default(string);
					}
					this.SendPropertyChanged("AspVideoDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspVideoAnalysisSegments")]
	public partial class AspVideoAnalysisSegment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VideoSegmentId;
		
		private string _VideoId;
		
		private System.Nullable<int> _VideoSegmentIndex;
		
		private System.Nullable<double> _Anger;
		
		private System.Nullable<double> _Contempt;
		
		private System.Nullable<double> _Disgust;
		
		private System.Nullable<double> _Fear;
		
		private System.Nullable<double> _Happiness;
		
		private System.Nullable<double> _Neutral;
		
		private System.Nullable<double> _Sadness;
		
		private System.Nullable<double> _Surprise;
		
		private EntityRef<AspVideoDetail> _AspVideoDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVideoSegmentIdChanging(int value);
    partial void OnVideoSegmentIdChanged();
    partial void OnVideoIdChanging(string value);
    partial void OnVideoIdChanged();
    partial void OnVideoSegmentIndexChanging(System.Nullable<int> value);
    partial void OnVideoSegmentIndexChanged();
    partial void OnAngerChanging(System.Nullable<double> value);
    partial void OnAngerChanged();
    partial void OnContemptChanging(System.Nullable<double> value);
    partial void OnContemptChanged();
    partial void OnDisgustChanging(System.Nullable<double> value);
    partial void OnDisgustChanged();
    partial void OnFearChanging(System.Nullable<double> value);
    partial void OnFearChanged();
    partial void OnHappinessChanging(System.Nullable<double> value);
    partial void OnHappinessChanged();
    partial void OnNeutralChanging(System.Nullable<double> value);
    partial void OnNeutralChanged();
    partial void OnSadnessChanging(System.Nullable<double> value);
    partial void OnSadnessChanged();
    partial void OnSurpriseChanging(System.Nullable<double> value);
    partial void OnSurpriseChanged();
    #endregion
		
		public AspVideoAnalysisSegment()
		{
			this._AspVideoDetail = default(EntityRef<AspVideoDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoSegmentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VideoSegmentId
		{
			get
			{
				return this._VideoSegmentId;
			}
			set
			{
				if ((this._VideoSegmentId != value))
				{
					this.OnVideoSegmentIdChanging(value);
					this.SendPropertyChanging();
					this._VideoSegmentId = value;
					this.SendPropertyChanged("VideoSegmentId");
					this.OnVideoSegmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoId", DbType="VarChar(255)")]
		public string VideoId
		{
			get
			{
				return this._VideoId;
			}
			set
			{
				if ((this._VideoId != value))
				{
					if (this._AspVideoDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVideoIdChanging(value);
					this.SendPropertyChanging();
					this._VideoId = value;
					this.SendPropertyChanged("VideoId");
					this.OnVideoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoSegmentIndex", DbType="Int")]
		public System.Nullable<int> VideoSegmentIndex
		{
			get
			{
				return this._VideoSegmentIndex;
			}
			set
			{
				if ((this._VideoSegmentIndex != value))
				{
					this.OnVideoSegmentIndexChanging(value);
					this.SendPropertyChanging();
					this._VideoSegmentIndex = value;
					this.SendPropertyChanged("VideoSegmentIndex");
					this.OnVideoSegmentIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anger", DbType="Float")]
		public System.Nullable<double> Anger
		{
			get
			{
				return this._Anger;
			}
			set
			{
				if ((this._Anger != value))
				{
					this.OnAngerChanging(value);
					this.SendPropertyChanging();
					this._Anger = value;
					this.SendPropertyChanged("Anger");
					this.OnAngerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Contempt", DbType="Float")]
		public System.Nullable<double> Contempt
		{
			get
			{
				return this._Contempt;
			}
			set
			{
				if ((this._Contempt != value))
				{
					this.OnContemptChanging(value);
					this.SendPropertyChanging();
					this._Contempt = value;
					this.SendPropertyChanged("Contempt");
					this.OnContemptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Disgust", DbType="Float")]
		public System.Nullable<double> Disgust
		{
			get
			{
				return this._Disgust;
			}
			set
			{
				if ((this._Disgust != value))
				{
					this.OnDisgustChanging(value);
					this.SendPropertyChanging();
					this._Disgust = value;
					this.SendPropertyChanged("Disgust");
					this.OnDisgustChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fear", DbType="Float")]
		public System.Nullable<double> Fear
		{
			get
			{
				return this._Fear;
			}
			set
			{
				if ((this._Fear != value))
				{
					this.OnFearChanging(value);
					this.SendPropertyChanging();
					this._Fear = value;
					this.SendPropertyChanged("Fear");
					this.OnFearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Happiness", DbType="Float")]
		public System.Nullable<double> Happiness
		{
			get
			{
				return this._Happiness;
			}
			set
			{
				if ((this._Happiness != value))
				{
					this.OnHappinessChanging(value);
					this.SendPropertyChanging();
					this._Happiness = value;
					this.SendPropertyChanged("Happiness");
					this.OnHappinessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Neutral", DbType="Float")]
		public System.Nullable<double> Neutral
		{
			get
			{
				return this._Neutral;
			}
			set
			{
				if ((this._Neutral != value))
				{
					this.OnNeutralChanging(value);
					this.SendPropertyChanging();
					this._Neutral = value;
					this.SendPropertyChanged("Neutral");
					this.OnNeutralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sadness", DbType="Float")]
		public System.Nullable<double> Sadness
		{
			get
			{
				return this._Sadness;
			}
			set
			{
				if ((this._Sadness != value))
				{
					this.OnSadnessChanging(value);
					this.SendPropertyChanging();
					this._Sadness = value;
					this.SendPropertyChanged("Sadness");
					this.OnSadnessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surprise", DbType="Float")]
		public System.Nullable<double> Surprise
		{
			get
			{
				return this._Surprise;
			}
			set
			{
				if ((this._Surprise != value))
				{
					this.OnSurpriseChanging(value);
					this.SendPropertyChanging();
					this._Surprise = value;
					this.SendPropertyChanged("Surprise");
					this.OnSurpriseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspVideoDetail_AspVideoAnalysisSegment", Storage="_AspVideoDetail", ThisKey="VideoId", OtherKey="VideoId", IsForeignKey=true)]
		public AspVideoDetail AspVideoDetail
		{
			get
			{
				return this._AspVideoDetail.Entity;
			}
			set
			{
				AspVideoDetail previousValue = this._AspVideoDetail.Entity;
				if (((previousValue != value) 
							|| (this._AspVideoDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspVideoDetail.Entity = null;
						previousValue.AspVideoAnalysisSegments.Remove(this);
					}
					this._AspVideoDetail.Entity = value;
					if ((value != null))
					{
						value.AspVideoAnalysisSegments.Add(this);
						this._VideoId = value.VideoId;
					}
					else
					{
						this._VideoId = default(string);
					}
					this.SendPropertyChanged("AspVideoDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspVideoGroups")]
	public partial class AspVideoGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _VideoGroupID;
		
		private string _GroupName;
		
		private EntitySet<AspVideoDetail> _AspVideoDetails;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVideoGroupIDChanging(int value);
    partial void OnVideoGroupIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    #endregion
		
		public AspVideoGroup()
		{
			this._AspVideoDetails = new EntitySet<AspVideoDetail>(new Action<AspVideoDetail>(this.attach_AspVideoDetails), new Action<AspVideoDetail>(this.detach_AspVideoDetails));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int VideoGroupID
		{
			get
			{
				return this._VideoGroupID;
			}
			set
			{
				if ((this._VideoGroupID != value))
				{
					this.OnVideoGroupIDChanging(value);
					this.SendPropertyChanging();
					this._VideoGroupID = value;
					this.SendPropertyChanged("VideoGroupID");
					this.OnVideoGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="VarChar(50)")]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspVideoGroup_AspVideoDetail", Storage="_AspVideoDetails", ThisKey="VideoGroupID", OtherKey="VideoGroupID")]
		public EntitySet<AspVideoDetail> AspVideoDetails
		{
			get
			{
				return this._AspVideoDetails;
			}
			set
			{
				this._AspVideoDetails.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspVideoDetails(AspVideoDetail entity)
		{
			this.SendPropertyChanging();
			entity.AspVideoGroup = this;
		}
		
		private void detach_AspVideoDetails(AspVideoDetail entity)
		{
			this.SendPropertyChanging();
			entity.AspVideoGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspVideoDetails")]
	public partial class AspVideoDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _VideoId;
		
		private string _VideoTitle;
		
		private string _ChannelId;
		
		private string _ChannelTitle;
		
		private System.Nullable<System.DateTime> _PublishedAt;
		
		private string _UserId;
		
		private System.Nullable<int> _VideoGroupID;
		
		private System.Nullable<int> _MainSentiment;
		
		private string _VideoLocation;
		
		private System.Nullable<System.DateTime> _Date;
		
		private EntitySet<AspTextAnalisysSegment> _AspTextAnalisysSegments;
		
		private EntitySet<AspVideoAnalysisSegment> _AspVideoAnalysisSegments;
		
		private EntitySet<AspSoundAnalisysSegment> _AspSoundAnalisysSegments;
		
		private EntityRef<AspVideoGroup> _AspVideoGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVideoIdChanging(string value);
    partial void OnVideoIdChanged();
    partial void OnVideoTitleChanging(string value);
    partial void OnVideoTitleChanged();
    partial void OnChannelIdChanging(string value);
    partial void OnChannelIdChanged();
    partial void OnChannelTitleChanging(string value);
    partial void OnChannelTitleChanged();
    partial void OnPublishedAtChanging(System.Nullable<System.DateTime> value);
    partial void OnPublishedAtChanged();
    partial void OnUserIdChanging(string value);
    partial void OnUserIdChanged();
    partial void OnVideoGroupIDChanging(System.Nullable<int> value);
    partial void OnVideoGroupIDChanged();
    partial void OnMainSentimentChanging(System.Nullable<int> value);
    partial void OnMainSentimentChanged();
    partial void OnVideoLocationChanging(string value);
    partial void OnVideoLocationChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    #endregion
		
		public AspVideoDetail()
		{
			this._AspTextAnalisysSegments = new EntitySet<AspTextAnalisysSegment>(new Action<AspTextAnalisysSegment>(this.attach_AspTextAnalisysSegments), new Action<AspTextAnalisysSegment>(this.detach_AspTextAnalisysSegments));
			this._AspVideoAnalysisSegments = new EntitySet<AspVideoAnalysisSegment>(new Action<AspVideoAnalysisSegment>(this.attach_AspVideoAnalysisSegments), new Action<AspVideoAnalysisSegment>(this.detach_AspVideoAnalysisSegments));
			this._AspSoundAnalisysSegments = new EntitySet<AspSoundAnalisysSegment>(new Action<AspSoundAnalisysSegment>(this.attach_AspSoundAnalisysSegments), new Action<AspSoundAnalisysSegment>(this.detach_AspSoundAnalisysSegments));
			this._AspVideoGroup = default(EntityRef<AspVideoGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoId", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string VideoId
		{
			get
			{
				return this._VideoId;
			}
			set
			{
				if ((this._VideoId != value))
				{
					this.OnVideoIdChanging(value);
					this.SendPropertyChanging();
					this._VideoId = value;
					this.SendPropertyChanged("VideoId");
					this.OnVideoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoTitle", DbType="VarChar(255)")]
		public string VideoTitle
		{
			get
			{
				return this._VideoTitle;
			}
			set
			{
				if ((this._VideoTitle != value))
				{
					this.OnVideoTitleChanging(value);
					this.SendPropertyChanging();
					this._VideoTitle = value;
					this.SendPropertyChanged("VideoTitle");
					this.OnVideoTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChannelId", DbType="VarChar(255)")]
		public string ChannelId
		{
			get
			{
				return this._ChannelId;
			}
			set
			{
				if ((this._ChannelId != value))
				{
					this.OnChannelIdChanging(value);
					this.SendPropertyChanging();
					this._ChannelId = value;
					this.SendPropertyChanged("ChannelId");
					this.OnChannelIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChannelTitle", DbType="VarChar(255)")]
		public string ChannelTitle
		{
			get
			{
				return this._ChannelTitle;
			}
			set
			{
				if ((this._ChannelTitle != value))
				{
					this.OnChannelTitleChanging(value);
					this.SendPropertyChanging();
					this._ChannelTitle = value;
					this.SendPropertyChanged("ChannelTitle");
					this.OnChannelTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PublishedAt", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> PublishedAt
		{
			get
			{
				return this._PublishedAt;
			}
			set
			{
				if ((this._PublishedAt != value))
				{
					this.OnPublishedAtChanging(value);
					this.SendPropertyChanging();
					this._PublishedAt = value;
					this.SendPropertyChanged("PublishedAt");
					this.OnPublishedAtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", DbType="NVarChar(128)")]
		public string UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoGroupID", DbType="Int")]
		public System.Nullable<int> VideoGroupID
		{
			get
			{
				return this._VideoGroupID;
			}
			set
			{
				if ((this._VideoGroupID != value))
				{
					if (this._AspVideoGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVideoGroupIDChanging(value);
					this.SendPropertyChanging();
					this._VideoGroupID = value;
					this.SendPropertyChanged("VideoGroupID");
					this.OnVideoGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MainSentiment", DbType="Int")]
		public System.Nullable<int> MainSentiment
		{
			get
			{
				return this._MainSentiment;
			}
			set
			{
				if ((this._MainSentiment != value))
				{
					this.OnMainSentimentChanging(value);
					this.SendPropertyChanging();
					this._MainSentiment = value;
					this.SendPropertyChanged("MainSentiment");
					this.OnMainSentimentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoLocation", DbType="VarChar(255)")]
		public string VideoLocation
		{
			get
			{
				return this._VideoLocation;
			}
			set
			{
				if ((this._VideoLocation != value))
				{
					this.OnVideoLocationChanging(value);
					this.SendPropertyChanging();
					this._VideoLocation = value;
					this.SendPropertyChanged("VideoLocation");
					this.OnVideoLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspVideoDetail_AspTextAnalisysSegment", Storage="_AspTextAnalisysSegments", ThisKey="VideoId", OtherKey="VideoId")]
		public EntitySet<AspTextAnalisysSegment> AspTextAnalisysSegments
		{
			get
			{
				return this._AspTextAnalisysSegments;
			}
			set
			{
				this._AspTextAnalisysSegments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspVideoDetail_AspVideoAnalysisSegment", Storage="_AspVideoAnalysisSegments", ThisKey="VideoId", OtherKey="VideoId")]
		public EntitySet<AspVideoAnalysisSegment> AspVideoAnalysisSegments
		{
			get
			{
				return this._AspVideoAnalysisSegments;
			}
			set
			{
				this._AspVideoAnalysisSegments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspVideoDetail_AspSoundAnalisysSegment", Storage="_AspSoundAnalisysSegments", ThisKey="VideoId", OtherKey="VideoId")]
		public EntitySet<AspSoundAnalisysSegment> AspSoundAnalisysSegments
		{
			get
			{
				return this._AspSoundAnalisysSegments;
			}
			set
			{
				this._AspSoundAnalisysSegments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspVideoGroup_AspVideoDetail", Storage="_AspVideoGroup", ThisKey="VideoGroupID", OtherKey="VideoGroupID", IsForeignKey=true)]
		public AspVideoGroup AspVideoGroup
		{
			get
			{
				return this._AspVideoGroup.Entity;
			}
			set
			{
				AspVideoGroup previousValue = this._AspVideoGroup.Entity;
				if (((previousValue != value) 
							|| (this._AspVideoGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspVideoGroup.Entity = null;
						previousValue.AspVideoDetails.Remove(this);
					}
					this._AspVideoGroup.Entity = value;
					if ((value != null))
					{
						value.AspVideoDetails.Add(this);
						this._VideoGroupID = value.VideoGroupID;
					}
					else
					{
						this._VideoGroupID = default(Nullable<int>);
					}
					this.SendPropertyChanged("AspVideoGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_AspTextAnalisysSegments(AspTextAnalisysSegment entity)
		{
			this.SendPropertyChanging();
			entity.AspVideoDetail = this;
		}
		
		private void detach_AspTextAnalisysSegments(AspTextAnalisysSegment entity)
		{
			this.SendPropertyChanging();
			entity.AspVideoDetail = null;
		}
		
		private void attach_AspVideoAnalysisSegments(AspVideoAnalysisSegment entity)
		{
			this.SendPropertyChanging();
			entity.AspVideoDetail = this;
		}
		
		private void detach_AspVideoAnalysisSegments(AspVideoAnalysisSegment entity)
		{
			this.SendPropertyChanging();
			entity.AspVideoDetail = null;
		}
		
		private void attach_AspSoundAnalisysSegments(AspSoundAnalisysSegment entity)
		{
			this.SendPropertyChanging();
			entity.AspVideoDetail = this;
		}
		
		private void detach_AspSoundAnalisysSegments(AspSoundAnalisysSegment entity)
		{
			this.SendPropertyChanging();
			entity.AspVideoDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AspSoundAnalisysSegments")]
	public partial class AspSoundAnalisysSegment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SoundSegmentId;
		
		private string _VideoId;
		
		private System.Nullable<int> _SoundSegmentIndex;
		
		private System.Nullable<double> _Offset;
		
		private System.Nullable<double> _Duration;
		
		private System.Nullable<double> _TemperVal;
		
		private string _TemperMode;
		
		private System.Nullable<double> _ValenceVal;
		
		private string _ValenceMode;
		
		private System.Nullable<double> _ArousalVal;
		
		private string _ArousalMode;
		
		private string _Gender;
		
		private string _MoodPrimary;
		
		private string _MoodSecondary;
		
		private string _CompositePrimary;
		
		private string _CompositeSecondary;
		
		private EntityRef<AspVideoDetail> _AspVideoDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoundSegmentIdChanging(int value);
    partial void OnSoundSegmentIdChanged();
    partial void OnVideoIdChanging(string value);
    partial void OnVideoIdChanged();
    partial void OnSoundSegmentIndexChanging(System.Nullable<int> value);
    partial void OnSoundSegmentIndexChanged();
    partial void OnOffsetChanging(System.Nullable<double> value);
    partial void OnOffsetChanged();
    partial void OnDurationChanging(System.Nullable<double> value);
    partial void OnDurationChanged();
    partial void OnTemperValChanging(System.Nullable<double> value);
    partial void OnTemperValChanged();
    partial void OnTemperModeChanging(string value);
    partial void OnTemperModeChanged();
    partial void OnValenceValChanging(System.Nullable<double> value);
    partial void OnValenceValChanged();
    partial void OnValenceModeChanging(string value);
    partial void OnValenceModeChanged();
    partial void OnArousalValChanging(System.Nullable<double> value);
    partial void OnArousalValChanged();
    partial void OnArousalModeChanging(string value);
    partial void OnArousalModeChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnMoodPrimaryChanging(string value);
    partial void OnMoodPrimaryChanged();
    partial void OnMoodSecondaryChanging(string value);
    partial void OnMoodSecondaryChanged();
    partial void OnCompositePrimaryChanging(string value);
    partial void OnCompositePrimaryChanged();
    partial void OnCompositeSecondaryChanging(string value);
    partial void OnCompositeSecondaryChanged();
    #endregion
		
		public AspSoundAnalisysSegment()
		{
			this._AspVideoDetail = default(EntityRef<AspVideoDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoundSegmentId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SoundSegmentId
		{
			get
			{
				return this._SoundSegmentId;
			}
			set
			{
				if ((this._SoundSegmentId != value))
				{
					this.OnSoundSegmentIdChanging(value);
					this.SendPropertyChanging();
					this._SoundSegmentId = value;
					this.SendPropertyChanged("SoundSegmentId");
					this.OnSoundSegmentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VideoId", DbType="VarChar(255)")]
		public string VideoId
		{
			get
			{
				return this._VideoId;
			}
			set
			{
				if ((this._VideoId != value))
				{
					if (this._AspVideoDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVideoIdChanging(value);
					this.SendPropertyChanging();
					this._VideoId = value;
					this.SendPropertyChanged("VideoId");
					this.OnVideoIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoundSegmentIndex", DbType="Int")]
		public System.Nullable<int> SoundSegmentIndex
		{
			get
			{
				return this._SoundSegmentIndex;
			}
			set
			{
				if ((this._SoundSegmentIndex != value))
				{
					this.OnSoundSegmentIndexChanging(value);
					this.SendPropertyChanging();
					this._SoundSegmentIndex = value;
					this.SendPropertyChanged("SoundSegmentIndex");
					this.OnSoundSegmentIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Offset", DbType="Float")]
		public System.Nullable<double> Offset
		{
			get
			{
				return this._Offset;
			}
			set
			{
				if ((this._Offset != value))
				{
					this.OnOffsetChanging(value);
					this.SendPropertyChanging();
					this._Offset = value;
					this.SendPropertyChanged("Offset");
					this.OnOffsetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duration", DbType="Float")]
		public System.Nullable<double> Duration
		{
			get
			{
				return this._Duration;
			}
			set
			{
				if ((this._Duration != value))
				{
					this.OnDurationChanging(value);
					this.SendPropertyChanging();
					this._Duration = value;
					this.SendPropertyChanged("Duration");
					this.OnDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemperVal", DbType="Float")]
		public System.Nullable<double> TemperVal
		{
			get
			{
				return this._TemperVal;
			}
			set
			{
				if ((this._TemperVal != value))
				{
					this.OnTemperValChanging(value);
					this.SendPropertyChanging();
					this._TemperVal = value;
					this.SendPropertyChanged("TemperVal");
					this.OnTemperValChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TemperMode", DbType="VarChar(255)")]
		public string TemperMode
		{
			get
			{
				return this._TemperMode;
			}
			set
			{
				if ((this._TemperMode != value))
				{
					this.OnTemperModeChanging(value);
					this.SendPropertyChanging();
					this._TemperMode = value;
					this.SendPropertyChanged("TemperMode");
					this.OnTemperModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValenceVal", DbType="Float")]
		public System.Nullable<double> ValenceVal
		{
			get
			{
				return this._ValenceVal;
			}
			set
			{
				if ((this._ValenceVal != value))
				{
					this.OnValenceValChanging(value);
					this.SendPropertyChanging();
					this._ValenceVal = value;
					this.SendPropertyChanged("ValenceVal");
					this.OnValenceValChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ValenceMode", DbType="VarChar(255)")]
		public string ValenceMode
		{
			get
			{
				return this._ValenceMode;
			}
			set
			{
				if ((this._ValenceMode != value))
				{
					this.OnValenceModeChanging(value);
					this.SendPropertyChanging();
					this._ValenceMode = value;
					this.SendPropertyChanged("ValenceMode");
					this.OnValenceModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArousalVal", DbType="Float")]
		public System.Nullable<double> ArousalVal
		{
			get
			{
				return this._ArousalVal;
			}
			set
			{
				if ((this._ArousalVal != value))
				{
					this.OnArousalValChanging(value);
					this.SendPropertyChanging();
					this._ArousalVal = value;
					this.SendPropertyChanged("ArousalVal");
					this.OnArousalValChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ArousalMode", DbType="VarChar(255)")]
		public string ArousalMode
		{
			get
			{
				return this._ArousalMode;
			}
			set
			{
				if ((this._ArousalMode != value))
				{
					this.OnArousalModeChanging(value);
					this.SendPropertyChanging();
					this._ArousalMode = value;
					this.SendPropertyChanged("ArousalMode");
					this.OnArousalModeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(255)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoodPrimary", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string MoodPrimary
		{
			get
			{
				return this._MoodPrimary;
			}
			set
			{
				if ((this._MoodPrimary != value))
				{
					this.OnMoodPrimaryChanging(value);
					this.SendPropertyChanging();
					this._MoodPrimary = value;
					this.SendPropertyChanged("MoodPrimary");
					this.OnMoodPrimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoodSecondary", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string MoodSecondary
		{
			get
			{
				return this._MoodSecondary;
			}
			set
			{
				if ((this._MoodSecondary != value))
				{
					this.OnMoodSecondaryChanging(value);
					this.SendPropertyChanging();
					this._MoodSecondary = value;
					this.SendPropertyChanged("MoodSecondary");
					this.OnMoodSecondaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompositePrimary", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string CompositePrimary
		{
			get
			{
				return this._CompositePrimary;
			}
			set
			{
				if ((this._CompositePrimary != value))
				{
					this.OnCompositePrimaryChanging(value);
					this.SendPropertyChanging();
					this._CompositePrimary = value;
					this.SendPropertyChanged("CompositePrimary");
					this.OnCompositePrimaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompositeSecondary", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string CompositeSecondary
		{
			get
			{
				return this._CompositeSecondary;
			}
			set
			{
				if ((this._CompositeSecondary != value))
				{
					this.OnCompositeSecondaryChanging(value);
					this.SendPropertyChanging();
					this._CompositeSecondary = value;
					this.SendPropertyChanged("CompositeSecondary");
					this.OnCompositeSecondaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AspVideoDetail_AspSoundAnalisysSegment", Storage="_AspVideoDetail", ThisKey="VideoId", OtherKey="VideoId", IsForeignKey=true)]
		public AspVideoDetail AspVideoDetail
		{
			get
			{
				return this._AspVideoDetail.Entity;
			}
			set
			{
				AspVideoDetail previousValue = this._AspVideoDetail.Entity;
				if (((previousValue != value) 
							|| (this._AspVideoDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AspVideoDetail.Entity = null;
						previousValue.AspSoundAnalisysSegments.Remove(this);
					}
					this._AspVideoDetail.Entity = value;
					if ((value != null))
					{
						value.AspSoundAnalisysSegments.Add(this);
						this._VideoId = value.VideoId;
					}
					else
					{
						this._VideoId = default(string);
					}
					this.SendPropertyChanged("AspVideoDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
